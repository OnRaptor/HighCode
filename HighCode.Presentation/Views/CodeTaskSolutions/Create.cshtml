@model HighCode.Presentation.ViewModels.TaskSolutionViewModel

@{
    ViewData["Title"] = "Решение задачи";
}

<style>
    .code_area{
        resize: none;
        outline: none;
        border: none;
        border-radius: 9px;
        background-color: floralwhite;
        font-family: Consolas;

    }
    .code_area:focus{
        outline: none;
    }
</style>
<div class="row">
    <div class="col-md-5">
        <h3>@Model.CodeTask.Title</h3>
        <p>@Model.CodeTask.Description<p/>
        <div class="form-group">
            <input type="submit" id="checkBtn" data-codetaskid=@Model.CodeTask.Id value="Проверка" class="btn btn-secondary" />
            @if (User.Identity.IsAuthenticated){
                <input type="submit" id="saveBtn" value="Сохранить" class="btn btn-secondary" />
                @if (!Model.IsPublished){
                    <input type="submit" id="sendBtn" value="Опубликовать" class="btn btn-primary" />
                }
                @if (Model.IsPublished){ 
                <a asp-action="Delete" asp-route-id="@Model.CodeTaskSolutionId" class="btn btn-danger">Снять с публикации</a> 
                }
            }
        </div>
    <div class="alert alert-info mt-2" id="statusBorder" style="display: none;">
            <p style="white-space: pre-line; " id="codeStatus"></p>
    </div>
    </div>
    <div class="col-md-7">
        <div id="container1" style="width: 100%; height: 30vh; margin-top: 10px"></div>
        <p style="margin-left: 30px">Код для тестирования:</p>
        <div id="container2" style="width: 100%; height: 30vh; margin-top: 10px"></div>
    </div>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/js/taskCodePage.js"></script>
    <script
        src="~/lib/require.min.js"
        integrity="sha256-0SGl1PJNDyJwcV5T+weg2zpEMrh7xvlwO4oXgvZCeZk="
        crossorigin="anonymous"></script>
    <script>
        require.config({ paths: { vs: '../lib/vs' } });
        
        require(['vs/editor/editor.main'], function () {
            window.codeEditor = monaco.editor.create(document.getElementById('container1'), {
                value: `@Html.Raw(Model.Code)`,
                language: 'csharp',
                minimap: { enabled: false },
                autoIndent: 'full'
            });
            monaco.editor.create(document.getElementById('container2'), {
                value: `@Html.Raw(Model.CodeTask.UnitTestCode)`,
                language: 'csharp',
                minimap: { enabled: false },
                readOnly: true
            });
        });
    </script>
}
