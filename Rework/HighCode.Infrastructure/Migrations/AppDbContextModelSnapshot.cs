// <auto-generated />
using System;
using HighCode.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HighCode.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CollectionOfTasksId")
                        .HasColumnType("uuid");

                    b.Property<int>("Complexity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgrammingLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TemplateFuncSignature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitTestCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CollectionOfTasksId");

                    b.ToTable("CodeTasks");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTaskSolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTested")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RelatedTaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RelatedTaskId");

                    b.ToTable("CodeTaskSolutions");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTaskSolutionReactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<int>("Reaction")
                        .HasColumnType("integer");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SolutionId");

                    b.ToTable("CodeTaskSolutionReactions");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CollectionOfTasks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<int>("Complexity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgrammingLanguages")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("CollectionOfTasks");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AnotherAuthor")
                        .HasColumnType("text");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("RelatedTaskId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RelatedTaskSolutionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RepliedCommentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RelatedTaskId");

                    b.HasIndex("RelatedTaskSolutionId");

                    b.HasIndex("RepliedCommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CommentsReactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Reaction")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CommentId");

                    b.ToTable("CommentsReactions");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.Leaderboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Score")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Leaderboard");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTask", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("HighCode.Infrastructure.Entities.CollectionOfTasks", null)
                        .WithMany("Tasks")
                        .HasForeignKey("CollectionOfTasksId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTaskSolution", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighCode.Infrastructure.Entities.CodeTask", "RelatedTask")
                        .WithMany()
                        .HasForeignKey("RelatedTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("RelatedTask");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTaskSolutionReactions", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighCode.Infrastructure.Entities.CodeTaskSolution", "Solution")
                        .WithMany()
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CollectionOfTasks", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.Comment", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighCode.Infrastructure.Entities.CodeTask", "RelatedTask")
                        .WithMany()
                        .HasForeignKey("RelatedTaskId");

                    b.HasOne("HighCode.Infrastructure.Entities.CodeTaskSolution", "RelatedTaskSolution")
                        .WithMany("Comments")
                        .HasForeignKey("RelatedTaskSolutionId");

                    b.HasOne("HighCode.Infrastructure.Entities.Comment", "RepliedComment")
                        .WithMany("Replies")
                        .HasForeignKey("RepliedCommentId");

                    b.Navigation("Author");

                    b.Navigation("RelatedTask");

                    b.Navigation("RelatedTaskSolution");

                    b.Navigation("RepliedComment");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CommentsReactions", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighCode.Infrastructure.Entities.Comment", "Comment")
                        .WithMany("Reactions")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.Leaderboard", b =>
                {
                    b.HasOne("HighCode.Infrastructure.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CodeTaskSolution", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.CollectionOfTasks", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("HighCode.Infrastructure.Entities.Comment", b =>
                {
                    b.Navigation("Reactions");

                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
