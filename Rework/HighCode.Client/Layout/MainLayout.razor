@using HighCode.Client.Services
@inherits LayoutComponentBase
@inject AuthService AuthService

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="IsDarkTheme" @bind-IsDarkMode:after="StateHasChanged"/>
<MudDialogProvider />
<MudSnackbarProvider/>

<CascadingValue Value="_mudThemeProvider">
    <MudLayout>
        <MudPaper Style="top: 0; left: 0; right: 0; background-color: rgba(var(--mud-palette-surface), 0.9); backdrop-filter: blur(12px)" Class="px-4 py-1 ma-2 rounded-pill fixed z-100" Elevation="3">
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                <MudStack AlignItems="AlignItems.Center" Row="true">
                    <MudLink Class="mr-2 hero_h1_gradient" Typo="Typo.h5" Underline="Underline.None" Href="">HighCode</MudLink>
                    <MudSpacer/>
                    <MudIconButton Icon="@ThemeSwitchIcon" OnClick="() => { IsDarkTheme = !IsDarkTheme; }"></MudIconButton>
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                        <MudStack Spacing="2">
                            <NavLinks ShowThemeSwitcher="false" ThemeSwitchIcon="@ThemeSwitchIcon" DarkThemeCallback="() => { IsDarkTheme = !IsDarkTheme; }"/>
                        </MudStack>
                    </MudMenu>
                </MudStack>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.SmAndDown">
                <MudStack Wrap="Wrap.Wrap" Style="width: 100%" AlignItems="AlignItems.Center" Row="true">
                    <MudLink Class="mr-2 hero_h1_gradient" Typo="Typo.h5" Underline="Underline.None" Href="">HighCode</MudLink>
                    <NavLinks ThemeSwitchIcon="@ThemeSwitchIcon" DarkThemeCallback="() => { IsDarkTheme = !IsDarkTheme; }"/>
                </MudStack>
            </MudHidden>
        </MudPaper>
        <MudMainContent Class="mt-5 mb-5">
            @Body
        </MudMainContent>
    </MudLayout>
</CascadingValue>

@code{
    bool IsDarkTheme { get; set; }
    string ThemeSwitchIcon => IsDarkTheme ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode;

    private MudThemeProvider _mudThemeProvider;

    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsDarkTheme = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
}