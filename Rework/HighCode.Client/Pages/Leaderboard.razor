@page "/rating"
@using HighCode.Domain.DTO
@inject IHighCodeAPI api;

<MudContainer MaxWidth="MaxWidth.Medium">
    @if (Leaderboards.Count == 0)
    {
        <MudProgressLinear Indeterminate="true"/>
    }
    else
    {
        <MudText Typo="Typo.h5">Рейтинг пользователей по очкам решений</MudText>
        <MudSimpleTable Loading="@(Leaderboards.Count == 0)" Hover="false">
            <thead>
            <tr>
                <th style="text-align: center; vertical-align: middle">Место</th>
                <th style="text-align: center; vertical-align: middle">Пользователь</th>
                <th style="text-align: center; vertical-align: middle">Очки</th>
            </tr>
            </thead>

            <tbody>
            @foreach (var l in Leaderboards.Select((x, i) => new { index = i, leaderboard = x }))
            {
                <tr>
                    <td style="text-align: center; vertical-align: middle">@(l.index + 1)</td>
                    <td style="text-align: center; vertical-align: middle">@l.leaderboard.Username</td>
                    <td style="text-align: center; vertical-align: middle">@l.leaderboard.Score</td>
                </tr>
            }
            </tbody>
        </MudSimpleTable>
    }
</MudContainer>

@code {
    ICollection<LeaderboardDTO> Leaderboards { get; set; } = new List<LeaderboardDTO>();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        try
        {
            var r = await api.GetLeaderboard();
            Leaderboards = r.Leaderboards.ToList();
            StateHasChanged();
        }
        catch
        {
            
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}